# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Uncomment this to still load settings configured via autoconfig.yml
# config.load_autoconfig()

# Aliases for commands. The keys of the given dictionary are the
# aliases, while the values are the commands they map to.
# Type: Dict
c.aliases = {
    'pocket': 'open -t https://getpocket.com/edit?url={url}',
    'q': 'quit', 'w': 'session-save', 'wq': 'quit --save'
}

# Always restore open sites when qutebrowser is reopened.
# Type: Bool
c.auto_save.session = True

# Background color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.bg = 'qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #282828, stop:1 #1d2021)'

# Top border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.border.top = 'black'

# Foreground color of completion widget category headers.
# Type: QtColor
c.colors.completion.category.fg = '#6699cc'

# Background color of the completion widget for even rows.
# Type: QssColor
c.colors.completion.even.bg = '#282828'

# Background color of the selected completion item.
# Type: QssColor
c.colors.completion.item.selected.bg = '#f99157'

# Top border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.item.selected.border.top = '#bbbb00'

# Foreground color of the selected completion item.
# Type: QtColor
c.colors.completion.item.selected.fg = '#1d2021'

# Foreground color of the matched text in the completion.
# Type: QssColor
c.colors.completion.match.fg = '#f99157'

# Background color of the completion widget for odd rows.
# Type: QssColor
c.colors.completion.odd.bg = '#2d2d2d'

# Color of the scrollbar handle in completion view.
# Type: QssColor
c.colors.completion.scrollbar.fg = 'white'

# Background color of the statusbar in insert mode.
# Type: QssColor
c.colors.statusbar.insert.bg = '#6699cc'

# Background color of the progress bar.
# Type: QssColor
c.colors.statusbar.progress.bg = '#83a598'

# Default foreground color of the URL in the statusbar.
# Type: QssColor
c.colors.statusbar.url.fg = 'white'

# Foreground color of the URL in the statusbar for hovered links.
# Type: QssColor
c.colors.statusbar.url.hover.fg = 'aqua'

# Foreground color of the URL in the statusbar on successful load
# (http).
# Type: QssColor
c.colors.statusbar.url.success.http.fg = 'white'

# Background color of unselected even tabs.
# Type: QtColor
c.colors.tabs.even.bg = '#2d2d2d'

# Foreground color of unselected even tabs.
# Type: QtColor
c.colors.tabs.even.fg = 'white'

# Color for the tab indicator on errors.
# Type: QtColor
c.colors.tabs.indicator.error = '#ff0000'

# Color gradient start for the tab indicator.
# Type: QtColor
c.colors.tabs.indicator.start = '#0000aa'

# Color gradient end for the tab indicator.
# Type: QtColor
c.colors.tabs.indicator.stop = '#00aa00'

# Background color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.bg = '#2d2d2d'

# Foreground color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.fg = 'white'

# Background color of selected even tabs.
# Type: QtColor
c.colors.tabs.selected.even.bg = 'white'

# Foreground color of selected even tabs.
# Type: QtColor
c.colors.tabs.selected.even.fg = '#2d2d2d'

# Background color of selected odd tabs.
# Type: QtColor
c.colors.tabs.selected.odd.bg = 'white'

# Foreground color of selected odd tabs.
# Type: QtColor
c.colors.tabs.selected.odd.fg = '#2d2d2d'

# Background color for webpages if unset (or empty to use the theme's
# color)
# Type: QtColor
c.colors.webpage.bg = 'white'

# The proxy to use. In addition to the listed values, you can use a
# `socks://...` or `http://...` URL.
# Type: Proxy
# Valid values:
#   - system: Use the system wide proxy.
#   - none: Don't use any proxy
c.content.proxy = 'system'

# Where to show the downloaded files.
# Type: VerticalPosition
# Valid values:
#   - top
#   - bottom
c.downloads.position = 'bottom'

# The editor (and arguments) to use for the `open-editor` command. `{}`
# gets replaced by the filename of the file to be edited.
# Type: ShellCommand
c.editor.command = ["i3-sensible-terminal", "-e", "vim {}"]

# Font used in the completion categories.
# Type: Font
c.fonts.completion.category = ' 10pt SNFS Display'

# Font used in the completion widget.
# Type: Font
c.fonts.completion.entry = '10pt SNFS Display'

# Font used for the debugging console.
# Type: QtFont
c.fonts.debug_console = '10pt SNFS Display'

# Font used for the hints.
# Type: Font
c.fonts.hints = '14pt SNFS Display'

# Default monospace fonts. Whenever "monospace" is used in a font
# setting, it's replaced with the fonts listed here.
# Type: Font
c.fonts.monospace = '"Hack", Monospace, "DejaVu Sans Mono", Monaco, "Bitstream Vera Sans Mono", "Andale Mono", "Courier New", Courier, "Liberation Mono", monospace, Fixed, Consolas, Terminal'

# Font used in the tab bar.
# Type: QtFont
c.fonts.tabs = '10pt SFNS Display'

# Font family for standard fonts.
# Type: FontFamily
c.fonts.web.family.standard = None

# Enable smooth scrolling for web pages. Note smooth scrolling does not
# work with the `:scroll-px` command.
# Type: Bool
c.scrolling.smooth = False

# Padding for tab indicators
# Type: Padding
c.tabs.indicator.padding = {'top': 1, 'bottom': 1, 'left': 0, 'right': 10}

# Behavior when the last tab is closed.
# Type: String
# Valid values:
#   - ignore: Don't do anything.
#   - blank: Load a blank page.
#   - startpage: Load the start page.
#   - default-page: Load the default page.
#   - close: Close the window.
c.tabs.last_close = 'close'

# Padding around text for tabs
# Type: Padding
c.tabs.padding = {'bottom': 10, 'left': 10, 'right': 10, 'top': 10}

# The position of the tab bar.
# Type: Position
# Valid values:
#   - top
#   - bottom
#   - left
#   - right
c.tabs.position = 'top'

# The format to use for the tab title. The following placeholders are
# defined:  * `{perc}`: The percentage as a string like `[10%]`. *
# `{perc_raw}`: The raw percentage, e.g. `10` * `{title}`: The title of
# the current web page * `{title_sep}`: The string ` - ` if a title is
# set, empty otherwise. * `{index}`: The index of this tab. * `{id}`:
# The internal tab ID of this tab. * `{scroll_pos}`: The page scroll
# position. * `{host}`: The host of the current web page. * `{backend}`:
# Either ''webkit'' or ''webengine'' * `{private}` : Indicates when
# private mode is enabled.
# Type: FormatString
c.tabs.title.format = '{host}'

# The format to use for the tab title for pinned tabs. The same
# placeholders like for `tabs.title.format` are defined.
# Type: FormatString
c.tabs.title.format_pinned = '{index}'

# The width of the tab bar if it's vertical, in px or as percentage of
# the window.
# Type: PercOrInt
c.tabs.width = '15%'

# Width of the progress indicator (0 to disable).
# Type: Int
c.tabs.indicator.width = 0

# Whether to wrap when changing tabs.
# Type: Bool
c.tabs.wrap = True

c.tabs.show = 'switching'
c.tabs.show_switching_delay = 2000


c.confirm_quit = ['multiple-tabs']
# Definitions of search engines which can be used via the address bar.
# Maps a searchengine name (such as `DEFAULT`, or `ddg`) to a URL with a
# `{}` placeholder. The placeholder will be replaced by the search term,
# use `{{` and `}}` for literal `{`/`}` signs. The searchengine named
# `DEFAULT` is used when `url.auto_search` is turned on and something
# else than a URL was entered to be opened. Other search engines can be
# used by prepending the search engine name to the search term, e.g.
# `:open google qutebrowser`.
# Type: Dict
c.url.searchengines = {
    'DEFAULT': 'https://duckduckgo.com/?q=g!+{}',
    'git': 'https://github.com/search?q={}'
}

# The default zoom level.
# Type: Perc
c.zoom.default = '150%'

# Bindings for normal mode
config.bind('J', 'tab-prev')
config.bind('K', 'tab-next')
config.bind('X', 'undo')
config.bind('d', 'scroll-page 0 0.5')
config.bind('u', 'scroll-page 0 -0.5')
onfig.bind('x', 'tab-close')
config.bind('sp', 'pocket')
config.bind('ge', 'open-editor')
